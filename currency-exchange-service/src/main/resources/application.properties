spring.application.name=currency-exchange
server.port=8000

#config server
spring.config.import=optional:configserver:http://localhost:8888

spring.datasource.url=jdbc:h2:mem:testdb
spring.jpa.show-sql=true
spring.h2.console.enabled=true

#jpa tries to insert data before creating table structure, in order to solve this problem
spring.jpa.defer-datasource-initialization=true

#eureka server address
eureka.client.service-url.default-zone=http://localhost:8761/eureka


# retry properties
resilience4j.retry.instances.sample-api.maxAttempts=5
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

# circuit breaker property
#resilience4j.circuitbreaker.instances.default.failureRateThreshold=90

# 2 requests in only 5 seconds
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=5s

# bulk head is for configuring mac concurrent calls
resilience4j.bulkhead.instances.default.maxConcurrentCalls=1
resilience4j.bulkhead.instances.sample-api.maxConcurrentCalls=1

#url
#http://localhost:8000/currency-exchange/from/USD/to/INR

#run this app on another port

# server.port=8001


#./watch.sh curl http://localhost:8000/sample-api


# sleuth related changes
spring.sleuth.sampler.probability=1.0

#0.5 means only 5%, 0.1 means every request we want to monitor

# how apis find zipkin

#spring.zipkin.base-url=http://localhost:9411/
